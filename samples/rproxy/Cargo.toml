[package]
name = "rproxy"
version = "0.1.0"
authors = ["janfalkin <jan.falkin@eluv.io>"]
edition = "2018"

# [lib]
# crate-type = ["cdylib", "rlib"]

# default = ["console_error_panic_hook"]

[lib]
crate-type = ["rlib", "cdylib"]

[dependencies]
elvwasm = { git = "https://github.com/eluv-io/elv_wasm", rev = "6bb215cc", package = "elvwasm"}
#elvwasm = { git = "https://github.com/eluv-io/elv_wasm", branch = "main", package = "elvwasm"}
#elvwasm = { path = "../.." }
wapc = "0.10.1"
wapc-guest = "0.4.0"
serde = "*"
serde_json = "*"
serde_derive = "*"
lazy_static = "1.4.0"
snailquote = "0.3.0"


# # The `console_error_panic_hook` crate provides better debugging of panics by
# # logging them with `console.error`. This is great for development, but requires
# # all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# # code size when deploying.
# console_error_panic_hook = { version = "0.1.6", optional = true }

# # `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# # compared to the default allocator's ~10K. It is slower than the default
# # allocator, however.
# #
# # Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
# wee_alloc = { version = "0.4.5", optional = true }


# [profile.release]
# # Tell `rustc` to optimize for small code size.
# opt-level = "s"
